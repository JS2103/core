apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy
    spec:
      containers:
      - name: oauth2-proxy
        args:
        - --provider=oidc
        - --oidc-issuer-url=https://accounts.google.com
        - --email-domain=*
        - --upstream=http://token-vendor.default.svc.cluster.local/apis/core.token-vendor/
        - --upstream=https://{{ .Values.domain }}/
        - --http-address=0.0.0.0:8080
        - --pass-access-token
        - --pass-host-header
        - "--scope=profile email https://www.googleapis.com/auth/cloud-platform"
        - --cookie-expire=168h
        - --cookie-refresh=1h
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: {{ .Values.oauth2_proxy.client_id }}
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: {{ .Values.oauth2_proxy.client_secret }}
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: {{ .Values.oauth2_proxy.cookie_secret }}
        # TODO(https://github.com/oauth2-proxy/oauth2-proxy/issues/1278): revert after a new release has been cut
        # Test the git version, as this should contain a fix for
        #   https://github.com/oauth2-proxy/oauth2-proxy/issues/1006
        # the images was build as:
        #   git clone https://github.com/oauth2-proxy/oauth2-proxy.git
        #   cd oauth2-proxy
        #   git describe 
        #     v0.1-1557-gfd5e23e
        #   cp Makefile Makefile.amd64   # remove all arm targets and buildx invocations, fix make target deps
        #   GOLANGCILINT=/bin/true REGISTRY=gcr.io/cloud-robotics-releases make -f Makefile.amd64 docker-push-all
        image: gcr.io/cloud-robotics-releases/oauth2-proxy@sha256:fd86272c5c351291400f5ce6d69a1d8b2bafd453ccb07e3e8bb7ccf205d88a07
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy
spec:
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: oauth2-proxy
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: oauth2-proxy
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /apis/$2
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"  # seconds
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - {{ .Values.domain }}
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - path: /web-apis($|/)(.*)
        backend:
          serviceName: oauth2-proxy
          servicePort: http
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: oauth2-proxy-interactive
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - {{ .Values.domain }}
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - path: "/oauth2"
        backend:
          serviceName: oauth2-proxy
          servicePort: http
