load("//bazel:container_push.bzl", "container_push")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@bazel_gomock//:gomock.bzl", "gomock")

go_library(
    name = "go_default_library",
    srcs = [
        "main.go",
        "util.go",
    ],
    importpath = "github.com/googlecloudrobotics/core/src/go/cmd/cr-adapter",
    visibility = ["//visibility:private"],
    deps = [
        "//src/go/pkg/grpc2rest:go_default_library",
        "@com_github_golang_protobuf//jsonpb:go_default_library_gen",
        "@io_k8s_apiextensions_apiserver//pkg/client/clientset/clientset:go_default_library",
        "@io_k8s_apimachinery//pkg/api/errors:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/watch:go_default_library",
        "@io_k8s_client_go//plugin/pkg/client/auth/gcp:go_default_library",
        "@io_k8s_client_go//tools/clientcmd:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
    ],
)

go_image(
    name = "cr-adapter-image",
    base = "@cc_image_base//image",
    embed = [":go_default_library"],
    pure = "on",
)

container_push(
    name = "cr-adapter.push",
    format = "Docker",
    image = ":cr-adapter-image",
)

go_binary(
    name = "cr-adapter-bin",
    embed = [":go_default_library"],
    pure = "on",
    visibility = ["//visibility:public"],
)

gomock(
    name = "mock_server_stream",
    out = "mock_server_stream_test.go",
    interfaces = ["ServerStream"],
    library = "@org_golang_google_grpc//:go_default_library",
    package = "main",
)

gomock(
    name = "mock_method",
    out = "mock_method_test.go",
    interfaces = ["Method"],
    library = "//src/go/pkg/grpc2rest:go_default_library",
    package = "main",
)

gomock(
    name = "mock_request",
    out = "mock_request_test.go",
    interfaces = ["Request"],
    library = "//src/go/pkg/grpc2rest:go_default_library",
    package = "main",
)

go_test(
    name = "go_default_test",
    srcs = [
        "main_test.go",
        "mock_method_test.go",
        "mock_request_test.go",
        "mock_server_stream_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//src/proto/hello-world:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_onsi_gomega//:go_default_library",
        "@io_k8s_apimachinery//pkg/api/errors:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//metadata:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
        "@org_golang_google_protobuf//runtime/protoiface:go_default_library",
    ],
)
